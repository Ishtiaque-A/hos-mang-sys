{"version":3,"file":"static/js/236.68b7a718.chunk.js","mappings":"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","sources":["Component/Patients/AddNewPatient/AllPatientWithDoctor.jsx","Component/Patients/AddNewPatient/AllPatients.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../../Patients/AddNewPatient/AddNewPatient.css\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport \"../../../imageUrl\";\nimport useUserData from \"../../../hooks/useUserData\";\nimport useCredentialURL from \"../../../hooks/useCredentialURL\";\nimport { getAllBranch } from \"../../../utils/getAllBranch\";\nimport SimpleSelect from \"../../../common/components/SimpleSelect\";\nimport { formatPhoneNumber, formateHN } from \"../../../utils/numberHelper\";\nimport { nullParser } from \"../../../utils/null-parser\";\n\nfunction AllPatientWithDoctor() {\n  const [loading, setLoading] = useState(true);\n  const [sortedData, setSortededData] = useState([]);\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const [filterData, setFilterData] = useState([]);\n  const [orgBranch, setOrgBranch] = useState([]);\n  const { SaasAuthURL } = useCredentialURL();\n\n  const user = useUserData();\n  useEffect(() => {\n    const getBranch = async () => {\n      const branches = await getAllBranch(\n        SaasAuthURL + \"/branch/service/find-branch-by-organizationId\"\n      );\n      if (branches.status === 200) {\n        const updatedBranches = branches?.data?.data?.map((branch) => ({\n          ...branch,\n          value: branch.id,\n          label: branch.name,\n        }));\n        setOrgBranch(updatedBranches);\n      }\n    };\n    getBranch();\n    return () => { };\n  }, [SaasAuthURL]);\n\n  useEffect(() => {\n    let filteredData = sortedData;\n    if (selectedBranch) {\n      filteredData = sortedData?.filter(\n        (data) => data?.saas_branch_id === selectedBranch?.value\n      );\n    }\n    setFilterData(filteredData);\n    return () => { };\n  }, [selectedBranch, sortedData]);\n  useEffect(() => {\n    axios.get(\"patients\").then((res) => {\n      console.log(res.data);\n      if (res.status === 200) {\n        setSortededData(res?.data?.patients);\n        setLoading(false);\n      }\n    });\n  }, []);\n\n  const deletePatient = (e, id) => {\n    e.preventDefault();\n    const thisClicked = e.currentTarget;\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios.delete(`/delete-patients/${id}`).then((res) => {\n          if (res.data.status === 200) {\n            thisClicked.closest(\"tr\").remove();\n          }\n        });\n        Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const columns = [\n    {\n      title: \"Name\",\n      field: \"fullName\",\n      render: (row) => (\n        <div>\n          {nullParser(row?.patient_images) ? (\n            <img\n              className=\"me-2\"\n              src={`${global.img_url}/images/files/${row?.patient_images}`}\n              width=\"20px\"\n              alt=\"no_img\"\n            />\n          ) : (\n            <img\n              className=\"me-2\"\n              src={`https://static.thenounproject.com/png/363640-200.png`}\n              width=\"20px\"\n              alt=\"No Image1\"\n            />\n          )}\n          {row?.fullName}\n        </div>\n      ),\n      cellStyle: {\n        width: 300,\n      },\n    },\n    {\n      title: \"HN No\",\n      headerStyle: {\n        whiteSpace: \"nowrap\",\n      },\n      field: \"patient_hn_number\",\n      render: (row) => (\n        <div>\n          <span style={{ whiteSpace: \"nowrap\" }}>\n            {\" \"}\n            {row?.patient_hn_number == null\n              ? \"\"\n              : formateHN(row?.patient_hn_number)}\n          </span>\n        </div>\n      ),\n      cellStyle: {\n        width: 150,\n      },\n    },\n    {\n      title: \"Branch\",\n      field: \"saas_branch_name\",\n    },\n\n    {\n      title: \"Mobile\",\n      field: \"patient_mobile_phone\",\n      render: (row) => (\n        <span style={{ whiteSpace: \"nowrap\" }}>\n          {row?.patient_mobile_phone == null\n            ? \"\"\n            : row?.patient_mobile_phone?.startsWith(\"0\") ? formatPhoneNumber(`+88${row?.patient_mobile_phone}`) : formatPhoneNumber(row?.patient_mobile_phone)}\n        </span>\n      ),\n    },\n    {\n      title: \"Email\",\n      field: \"patient_email\",\n      render: (row) => (\n        <div>{row?.patient_email == null ? \"\" : row?.patient_email}</div>\n      ),\n    },\n    {\n      title: \"DOB\",\n      field: \"patient_dob\",\n      render: (row) => (\n        <div>\n          {row?.patient_dob == null\n            ? \"\"\n            : moment(row?.patient_dob).format(\"MM/DD/YYYY\")}\n        </div>\n      ),\n    },\n    {\n      title: \"Status\",\n      field: \"patient_status\",\n      render: (row) => (\n        <div>{row?.statuses == null ? \"\" : row?.statuses?.status_name}</div>\n      ),\n    },\n    {\n      title: \"Sex\",\n      field: \"patient_birth_sex_id\",\n      render: (row) => (\n        <div>\n          {row?.patient_birth_sex_id == null\n            ? \"\"\n            : row?.patient_birth_sex?.birth_sex_name}\n        </div>\n      ),\n    },\n    {\n      title: \"Action\",\n      field: \"patient\",\n      render: (row) => (\n        <div className=\"text-center\" style={{ fontSize: \"3px\" }}>\n          <Link\n            to={`/edit-patients/${row?.id}`}\n            className=\"btn action-btn btn-sm\"\n            data-bs-toggle=\"tooltip\"\n            title=\"Edit Patients\"\n          >\n            <i className=\"far fa-edit\"></i>\n          </Link>\n          &nbsp;\n          <button\n            onClick={(e) => deletePatient(e, row?.id)}\n            className=\"btn action-btn btn-sm\"\n          >\n            {\" \"}\n            <i className=\"far fa-trash\"></i>{\" \"}\n          </button>\n          &nbsp;\n          <Link\n            to={`/patients-profile/${row?.id}`}\n            className=\"btn action-btn btn-sm\"\n            data-bs-toggle=\"tooltip\"\n            title=\"Patients Profile\"\n          >\n            <i className=\"far fa-user-alt\"></i>\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const filterColumns = useMemo(() => {\n    if (user?.isSuperAdmin) {\n      return columns;\n    } else {\n      return columns.filter((col) => col.field !== \"saas_branch_name\");\n    }\n  }, [user?.isSuperAdmin, columns]);\n\n  return (\n    <div className=\"ms-2 all-patients mt-2\">\n      <div className=\"custom-card patients-head\">\n        <h5 className=\"fw-normal py-2 px-2  text-start mb-2 text-login\">\n          Patients List\n          <Link\n            to=\"/newpatient\"\n            className=\"btn btn-primary me-1 btn-sm float-end\"\n          >\n\n            Add Patients{\" \"}\n          </Link>\n        </h5>\n      </div>\n\n      <div className=\"custom-card patient-table mt-2\">\n        <MaterialTable\n          columns={filterColumns}\n          data={filterData}\n          isLoading={loading}\n          options={{\n            search: true,\n            showTitle: false,\n            searchFieldAlignment: \"left\",\n            searchFieldStyle: { borderRadius: 16 },\n            pageSize: 10,\n            emptyRowsWhenPaging: false,\n            pageSizeOptions: [5, 10, 20, 50, 100],\n          }}\n          components={{\n            Toolbar: (props) => (\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <MTableToolbar {...props} />\n                {user?.isSuperAdmin && (\n                  <div className=\"filter me-2\">\n                    <SimpleSelect\n                      value={selectedBranch}\n                      options={orgBranch}\n                      onChange={(data) => {\n                        if (data) {\n                          setSelectedBranch(data);\n                        } else {\n                          setSelectedBranch(null);\n                        }\n                      }}\n                      placeholder=\"Select Branch\"\n                    />\n                  </div>\n                )}\n              </div>\n            ),\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AllPatientWithDoctor;\n","import AllPatientWithDoctor from \"./AllPatientWithDoctor\";\nfunction AllPatients() {\n  return <AllPatientWithDoctor />;\n}\n\nexport default AllPatients;\n"],"names":["useState","loading","setLoading","sortedData","setSortededData","selectedBranch","setSelectedBranch","filterData","setFilterData","orgBranch","setOrgBranch","SaasAuthURL","useCredentialURL","user","useUserData","useEffect","getBranch","getAllBranch","branches","status","updatedBranches","data","map","branch","value","id","label","name","filteredData","filter","saas_branch_id","axios","then","res","console","log","patients","columns","title","field","render","row","nullParser","patient_images","className","src","global","img_url","width","alt","fullName","cellStyle","headerStyle","whiteSpace","style","patient_hn_number","formateHN","patient_mobile_phone","startsWith","formatPhoneNumber","patient_email","patient_dob","moment","format","statuses","status_name","patient_birth_sex_id","patient_birth_sex","birth_sex_name","fontSize","to","onClick","e","preventDefault","thisClicked","currentTarget","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","closest","remove","deletePatient","filterColumns","useMemo","isSuperAdmin","col","isLoading","options","search","showTitle","searchFieldAlignment","searchFieldStyle","borderRadius","pageSize","emptyRowsWhenPaging","pageSizeOptions","components","Toolbar","props","MTableToolbar","SimpleSelect","onChange","placeholder"],"sourceRoot":""}