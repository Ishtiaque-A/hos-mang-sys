{"version":3,"file":"static/js/141.a3ced1c7.chunk.js","mappings":"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","sources":["Component/Appointment/AppointmentBook/sample-base.js","Component/Appointment/AppointmentBook/ComponentToPrint.jsx","Component/Appointment/AppointmentBook/ShowForSmallDevicesAppointmentStatus.jsx","Component/Appointment/AppointmentBook/AppointmentScheduler.js"],"sourcesContent":["import * as React from 'react';\n    import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }","import moment from 'moment';\nimport React, { Component } from 'react'\nimport image from '../../../Images/MHP.png';\nimport Barcode from 'react-barcode';\nexport default class ComponentToPrint extends Component {\n    user = JSON.parse(localStorage.getItem(\"userData\"));\n    render() {\n        console.log(\"Props Value For Patient Print\", this.props.patientVale)\n        return (\n            <>\n                {\n                    this.props.patientVale.patient != null ?\n                        <>\n                            <div id='AppointmentSlip' className='AppointmentSlip'>\n\n                                <div className=\"sleep\">\n                                    <div className=\"top d-flex\">\n                                        <img className=\"d-inline ms-2\" src={this.user?.organization_logo} alt=\"\" />\n                                        <div className=\"ms-5 ps-5\">\n                                            <h5>{this.user?.organization_name}</h5>\n                                            <h6>{this.user?.organization_address}</h6>\n                                            <h6>{this.user?.organization_mobile} </h6>\n                                        </div>\n                                    </div>\n                                    <div className=\"text-center my-2\">\n                                        <h3 className=\"heading p-1\">Appointment Slip</h3>\n                                    </div>\n                                    <div className=\"row my-1\">\n                                        <div className=\"col-4\">\n                                            <p><strong>Name</strong></p>\n                                            <p>{this.props.patientVale.patient.patient_first_name} {this.props.patientVale.patient.patient_middle_name} {this.props.patientVale.patient.patient_last_name}</p>\n                                            <p><strong>Birth Date :</strong> {this.props.patientVale.patient.patient_dob}</p>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <p><strong>HN</strong></p>\n                                            <p>{this.props.patientVale.patient.patient_hn_number}</p>\n                                            <p><strong>Age :</strong> {moment().diff(this.props.patientVale.patient.patient_dob, 'years')} Years</p>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <p><strong>Print Date: :</strong> {moment(new Date()).format(\"MMM Do YY\")}</p>\n                                            <p><strong>Print Time: :</strong> {moment(new Date()).format('LT')}</p>\n                                            <p><strong>TEL :</strong> {this.props.patientVale.patient.patient_mobile_phone}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"row time my-2\">\n                                        <div className=\"col-6 row\">\n                                            <div className=\"col-6\">\n                                                <strong className=\"\">Date</strong>\n                                                <p className=\"mt-2\"> {this.props.appointDay}</p>\n                                            </div>\n                                            <div className=\"col-6\">\n                                                <strong className=\"mt-2\"> Time</strong>\n                                                <p className=\"mt-2\" >{this.props.appointTime}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-6 row\">\n                                            <div className=\"col-6\">\n                                                <strong className=\"\">Doctor</strong>\n                                                <p className=\"mt-2\">{this.props.doctorData[0].dr_given_name}</p>\n                                            </div>\n                                            <div className=\"col-6\">\n                                                <strong className=\"\"> Service/Remark</strong>\n                                                <p className=\"mt-2\"> Follow up appointment</p>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div className=\" my-2 sleep-footer\">\n                                        <div className=\"my-2 mt-4\">\n                                            <p><strong>Please Contact your doctor at </strong>marrow transplant Department ar 9th floor (Zone South\n                                                Lift)</p>\n                                            <small>Please arrive at the hospital 15 minutes before appointment time. If the doctor required you to\n                                                have\n                                                a blood test orspecial tests, please arrive 1-2 hour prior to your appointment</small>\n                                        </div>\n                                    </div>\n                                    <div className=\"my-3 row\">\n                                        <div className=\"col-6\">\n                                            <p>Call Center 020-222-222</p>\n                                            <p>In case of emergency or unable to keep an appointment,<br /> <br /> <br /> please contact Call Center Tel. 202-222-222</p>\n                                        </div>\n                                        <div className=\"col-5 d-flex justify-content-end\">\n                                            <Barcode displayValue=\"false\" height=\"80\" width='4' value={this.props.patientVale.patient.patient_hn_number} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </> : <>\n                            <h1 className='errSlip'>\n                                Appointment are not selected OR this patient are not registered....Please Check !\n\n                            </h1>\n\n\n                        </>\n                }\n            </>\n\n        )\n\n    }\n}\n","import useResizeObserver from \"../../../hooks/useResizeObserver\";\n\nexport const ShowForSmallDevicesAppointmentStatus = () => {\n  const { width } = useResizeObserver();\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${width > 900 ? 10 : 5}, 1fr)`,\n        gap: \"3px\",\n        padding: \"15px\",\n        backgroundColor: \"#fff\",\n        margin: \"10px 0px\",\n        borderRadius: \"10px\",\n      }}\n    >\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle online_patients\"></span>\n        Tel. Patient\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle RPatient\"></span>\n        Reg. Patient\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle NonRegister\"></span>\n        Non Reg. Patient\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle arrived\"></span>\n        Arrived\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle unavilable\"></span>\n        Unavilable\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle waiting\"></span>\n        Waiting\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle withdoctors\"></span>\n        With Doctors\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle attbilling\"></span>\n        At billing\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle notattend\"></span>\n        Did not attend\n      </div>\n      <div className=\"legendLevel\">\n        <span className=\"e-menu-icon fas fa-circle appcompleted\"></span>\n        Completed\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Day,\n  Week,\n  WorkWeek,\n  Month,\n  Agenda,\n  ScheduleComponent,\n  ViewsDirective,\n  ViewDirective,\n  ResourcesDirective,\n  ResourceDirective,\n  Inject,\n  Resize,\n  DragAndDrop,\n  ExcelExport,\n} from \"@syncfusion/ej2-react-schedule\";\nimport { createElement, extend, L10n } from \"@syncfusion/ej2-base\";\nimport { SampleBase } from \"./sample-base\";\nimport {\n  closest,\n  isNullOrUndefined,\n  remove,\n  removeClass,\n} from \"@syncfusion/ej2-base\";\nimport axios from \"axios\";\nimport { Button } from \"@syncfusion/ej2-buttons\";\nimport ReactModal from \"react-modal\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport swal from \"sweetalert\";\nimport { ContextMenuComponent } from \"@syncfusion/ej2-react-navigations\";\nimport \"./AppointmentBook.css\";\nimport ReactToPrint from \"react-to-print\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport ComponentToPrint from \"./ComponentToPrint\";\nimport Swal from \"sweetalert2\";\nimport { LocalizationProvider, TimeField } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { ShowForSmallDevicesAppointmentStatus } from \"./ShowForSmallDevicesAppointmentStatus\";\nimport moment from \"moment\";\nimport ReactDatePicker from \"react-datepicker\";\nimport { formatPhoneNumber, formateHN } from \"../../../utils/numberHelper\";\nimport { NewModal } from \"../../../common/components/NewModal\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nL10n.load({\n  \"en-US\": {\n    schedule: {\n      saveButton: \"Add\",\n      cancelButton: \"Close\",\n      deleteButton: \"Remove Patient\",\n      save: \"Add\",\n    },\n  },\n});\nexport default class AppointmentScheduler extends SampleBase {\n  constructor() {\n    super(...arguments);\n\n    this.state = {\n      scheduleData: [],\n      DoctorSearchData: [],\n      showModal: false,\n      app_type_model: false,\n      search: null,\n      searchResult: null,\n      errorData: null,\n      cellData: [],\n      existingPatient: null,\n      selectedDateNew: new Date().toLocaleDateString(),\n      showClender: false,\n      searchBYDoctorName: \"\",\n      searchByDepartment: \"\",\n      doctorDepartment: [],\n      DoctorSearchDataForDepartment: [],\n      showPrint: false,\n      patientValueForPrint: [],\n      age: \"\",\n      printDoctorData: [],\n      appointmentDay: \"\",\n      appointmentTime: \"\",\n      patient_regi_model_show: false,\n      patientGenderDropdown: [],\n      patientBloodDropdown: [],\n      orgBranch: [],\n      patientEventData: {\n        Subject: \"\",\n      },\n      image: [],\n      imageUrl: [],\n      image_error: \"\",\n      app_type: \"Chamber\",\n      patient_data: {},\n      add_app_outside_of_schedule: false,\n      start_time: \"\",\n      patient_dob: new Date(),\n      days: \"\",\n      months: \"\",\n    };\n\n    this.patient_hn_number = React.createRef();\n    this.patient_first_name = React.createRef();\n    this.patient_mobile_phone = React.createRef();\n    this.patient_email = React.createRef();\n    this.patient_dob = React.createRef();\n    this.ptn_blood_group_id = React.createRef();\n    this.patient_birth_sex_id = React.createRef();\n    this.patient_address1 = React.createRef();\n    this.saas_branch_id = React.createRef();\n    this.patient_image = React.createRef();\n    // this.componentRef = React.createRef();\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.searchHandeler = this.searchHandeler.bind(this);\n    this.clearHandle = this.clearHandle.bind(this);\n    this.addExistingPatient = this.addExistingPatient.bind(this);\n\n    this.PatientModelColse = this.PatientModelColse.bind(this);\n    this.handleSubmitForPatient = this.handleSubmitForPatient.bind(this);\n\n    this.menuItems = [\n      {\n        text: \"Patient Profile\",\n        iconCss: \"fas fa-user-check\",\n        id: \"PatientProfile\",\n      },\n      {\n        text: \"Edit patient\",\n        iconCss: \"fas fa-user-check\",\n        id: \"updatePatient\",\n      },\n      {\n        text: \"View Record\",\n        iconCss: \"fas fa-eye\",\n        id: \"viewRecord\",\n      },\n      {\n        text: \"Start Visit\",\n        iconCss: \"far fa-arrow-alt-circle-right\",\n        id: \"startVisit\",\n      },\n      {\n        text: \"New Patient Registration\",\n        iconCss: \"fas fa-user-check\",\n        id: \"patient_reg\",\n      },\n      {\n        text: \"Cancel appointment\",\n        iconCss: \"fas fa-user-times\",\n        id: \"cancle\",\n      },\n      {\n        text: \"Change Status\",\n        iconCss: \"fas fa-info-circle\",\n        id: \"status\",\n        items: [\n          {\n            text: \"Arrived\",\n            iconCss: \"fas fa-circle arrived\",\n            id: \"Arrived\",\n          },\n          {\n            text: \"Unavailable\",\n            iconCss: \"fas fa-circle unavilable\",\n            id: \"Unavailable\",\n          },\n          {\n            text: \"Waiting\",\n            iconCss: \"fas fa-circle waiting\",\n            id: \"Waiting\",\n          },\n          {\n            text: \"With Doctors\",\n            iconCss: \"fas fa-circle withdoctors\",\n            id: \"withdoctors\",\n          },\n          {\n            text: \"At billing\",\n            iconCss: \"fas fa-circle attbilling\",\n            id: \"attbilling\",\n          },\n          {\n            text: \"Did not attend\",\n            iconCss: \"fas fa-circle notattend\",\n            id: \"notattend\",\n          },\n        ],\n      },\n      {\n        text: \"Print Appointment Slip\",\n        iconCss: \"fas fa-print\",\n        id: \"printSlip\",\n      },\n      {\n        text: \"Today\",\n        iconCss: \"fas fa-clock\",\n        id: \"Today\",\n      },\n    ];\n  }\n\n  onMenuItemSelect(args) {\n    let selectedMenuItem = args.item.id;\n    if (this.selectedTarget.classList.contains(\"e-appointment\")) {\n      this.eventObj = this.scheduleObj.getEventDetails(this.selectedTarget);\n    }\n    // eslint-disable-next-line default-case\n    switch (selectedMenuItem) {\n      case \"Today\":\n        this.scheduleObj.selectedDate = new Date();\n        break;\n\n      case \"startVisit\":\n        // console.log(\"id\",this.eventObj)\n        // this.props.goToGD(this.eventObj.Id);\n        this.props.goToGD(this.eventObj.Id, this.eventObj.patientID);\n        //  localStorage.setItem(\"StartTime\", JSON.stringify(this.eventObj.StartTime));\n\n        // axios.get(`/patient-search/${this.eventObj.Location}`).then(res => {\n        //   this.props.goToGD(res.data[0].id)\n        // })\n        break;\n      case \"PatientProfile\":\n        this.props.goToPatientProfile(this.eventObj.patientID);\n\n        // axios.get(`/patient-search/${this.eventObj.Location}`).then(res => {\n        //   this.props.goToPatientProfile(res.data[0].id)\n        // })\n        break;\n\n      case \"updatePatient\":\n        this.props.goToPatientEdit(this.eventObj.patientID);\n        // axios.get(`/patient-search/${this.eventObj.Location}`).then(res => {\n        //   this.props.goToPatientEdit(res.data[0].id)\n        // })\n\n        break;\n\n      case \"Arrived\":\n        this.scheduleObj.saveEvent({\n          CategoryColor: \"#020131\",\n          Description: this.eventObj.Description,\n          DoctorID: this.eventObj.DoctorID,\n          EndTime: this.eventObj.EndTime,\n          Id: this.eventObj.Id,\n          Location: this.eventObj.Location,\n          StartTime: this.eventObj.StartTime,\n          Subject: this.eventObj?.Subject,\n          appointCreated: this.eventObj.appointCreated,\n          patientID: this.eventObj.patientID,\n          statusName: \"Arrived\",\n        });\n        break;\n\n      case \"Unavailable\":\n        this.scheduleObj.saveEvent({\n          CategoryColor: \"#6e0711\",\n          Description: this.eventObj.Description,\n          DoctorID: this.eventObj.DoctorID,\n          EndTime: this.eventObj.EndTime,\n          Id: this.eventObj.Id,\n          Location: this.eventObj.Location,\n          StartTime: this.eventObj.StartTime,\n          Subject: this.eventObj?.Subject,\n          appointCreated: this.eventObj.appointCreated,\n          patientID: this.eventObj.patientID,\n          statusName: \"Unavailable\",\n        });\n        break;\n\n      case \"Waiting\":\n        this.scheduleObj.saveEvent({\n          CategoryColor: \"#ebdb07\",\n          Description: this.eventObj.Description,\n          DoctorID: this.eventObj.DoctorID,\n          EndTime: this.eventObj.EndTime,\n          Id: this.eventObj.Id,\n          Location: this.eventObj.Location,\n          StartTime: this.eventObj.StartTime,\n          Subject: this.eventObj?.Subject,\n          appointCreated: this.eventObj.appointCreated,\n          patientID: this.eventObj.patientID,\n          statusName: \"Waiting\",\n        });\n        break;\n\n      case \"withdoctors\":\n        this.scheduleObj.saveEvent({\n          CategoryColor: \"#004700\",\n          Description: this.eventObj.Description,\n          DoctorID: this.eventObj.DoctorID,\n          EndTime: this.eventObj.EndTime,\n          Id: this.eventObj.Id,\n          Location: this.eventObj.Location,\n          StartTime: this.eventObj.StartTime,\n          Subject: this.eventObj?.Subject,\n          appointCreated: this.eventObj.appointCreated,\n          patientID: this.eventObj.patientID,\n          statusName: \"withdoctors\",\n        });\n        break;\n\n      case \"attbilling\":\n        this.scheduleObj.saveEvent({\n          CategoryColor: \"#08f4fc\",\n          Description: this.eventObj.Description,\n          DoctorID: this.eventObj.DoctorID,\n          EndTime: this.eventObj.EndTime,\n          Id: this.eventObj.Id,\n          Location: this.eventObj.Location,\n          StartTime: this.eventObj.StartTime,\n          Subject: this.eventObj?.Subject,\n          appointCreated: this.eventObj.appointCreated,\n          patientID: this.eventObj.patientID,\n          statusName: \"attbilling\",\n        });\n        break;\n\n      case \"notattend\":\n        this.scheduleObj.saveEvent({\n          CategoryColor: \"#ff0d15\",\n          Description: this.eventObj.Description,\n          DoctorID: this.eventObj.DoctorID,\n          EndTime: this.eventObj.EndTime,\n          Id: this.eventObj.Id,\n          Location: this.eventObj.Location,\n          StartTime: this.eventObj.StartTime,\n          Subject: this.eventObj?.Subject,\n          appointCreated: this.eventObj.appointCreated,\n          patientID: this.eventObj.patientID,\n          statusName: \"notattend\",\n        });\n        // axios.post(`/update-scheduler/${this.eventObj.Id}`,\n        //   {\n        //     CategoryColor: \"#ff0d15\",\n        //     statusName: \"notattend\",\n        //     doctors_id: this.eventObj.DoctorID.toString(),\n        //     patient_name: this.eventObj.Subject,\n        //     IsAllDay: false,\n        //     StartTime: this.eventObj.StartTime,\n        //     EndTime: this.eventObj.EndTime,\n        //     patient_mobile: this.eventObj.Location,\n        //     notes: this.eventObj.Description,\n        //     patientID: this.eventObj.patientID,\n        //     appointCreated: this.eventObj.appointCreated\n        //   })\n        //   .then(res => {\n        //     // console.log(\"Update Data_eventChange\", res.data)\n        //     window.location.reload(true);\n        //   });\n        break;\n\n      case \"cancle\":\n        this.scheduleObj.deleteEvent(this.eventObj);\n        break;\n\n      case \"patient_reg\":\n        this.setState({\n          patient_regi_model_show: true,\n          patientEventData: this.eventObj,\n        });\n\n        break;\n\n      case \"printSlip\":\n        var date = new Date(this.eventObj.StartTime);\n        var appDate =\n          date.getDate() +\n          \"/\" +\n          (date.getMonth() + 1) +\n          \"/\" +\n          date.getFullYear();\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n\n        var ampm = hours >= 12 ? \"pm\" : \"am\";\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        var apptime = hours + \":\" + minutes + \" \" + ampm;\n\n        this.setState({\n          appointmentDay: appDate,\n          appointmentTime: apptime,\n        });\n        axios.get(`/doctor-search-id/${this.eventObj.DoctorID}`).then((res) => {\n          console.log(res.data, \"printDoctorData\");\n          this.setState({\n            printDoctorData: res.data,\n          });\n        });\n        axios\n          .get(`/patient-search-by-id/${this.eventObj.patientID}`)\n          .then((res) => {\n            var currentYear = new Date().getFullYear();\n            var birthDate = new Date(res.data.patient_dob).getFullYear();\n            var age = currentYear - birthDate;\n            console.log(res.data, \"printDoctorData\");\n\n            this.setState({\n              patientValueForPrint: res.data,\n              age: age,\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n        setTimeout(function () {\n          document.getElementById(\"appointmentSlip\").click();\n        }, 2000);\n\n        break;\n    }\n  }\n\n  onContextMenuBeforeOpen(args) {\n    let newEventElement = document.querySelector(\".e-new-event\");\n    if (newEventElement) {\n      remove(newEventElement);\n      removeClass(\n        [document.querySelector(\".e-selected-cell\")],\n        \"e-selected-cell\"\n      );\n    }\n    let targetElement = args.event.target;\n    if (closest(targetElement, \".e-contextmenu\")) {\n      return;\n    }\n    this.selectedTarget = closest(\n      targetElement,\n      \".e-appointment,.e-work-cells,\" +\n        \".e-vertical-view .e-date-header-wrap .e-all-day-cells,.e-vertical-view .e-date-header-wrap .e-header-cells\"\n    );\n    if (isNullOrUndefined(this.selectedTarget)) {\n      args.cancel = true;\n      return;\n    }\n\n    if (this.selectedTarget.classList.contains(\"e-appointment\")) {\n      this.eventObj = this.scheduleObj.getEventDetails(this.selectedTarget);\n      if (this.eventObj.RecurrenceRule) {\n        // this.menuObj.showItems(['EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);\n        // this.menuObj.hideItems(['Add', 'AddRecurrence', 'Today', 'Save', 'Delete'], true);\n        // this.menuObj.hideItems(['Today', 'PatientProfile', 'status','viewRecord','startVisit','printSlip'], true);\n      } else {\n        if (\n          this.eventObj.patientID === undefined ||\n          this.eventObj.patientID === null\n        ) {\n          //this.menuObj.hideItems(['PatientProfile','printSlip',], true);\n          this.menuObj.hideItems(\n            [\n              \"Today\",\n              \"PatientProfile\",\n              \"status\",\n              \"viewRecord\",\n              \"startVisit\",\n              \"printSlip\",\n              \"updatePatient\",\n            ],\n            true\n          );\n          this.menuObj.showItems([\"patient_reg\"], true);\n        } else {\n          this.menuObj.showItems(\n            [\n              \"Today\",\n              \"PatientProfile\",\n              \"status\",\n              \"viewRecord\",\n              \"startVisit\",\n              \"printSlip\",\n              \"cancle\",\n              \"updatePatient\",\n            ],\n            true\n          );\n          this.menuObj.hideItems([\"patient_reg\"], true);\n        }\n\n        // this.menuObj.hideItems(['ResisterPatient', 'addPatient'], true);\n      }\n      return;\n    }\n    this.menuObj.hideItems(\n      [\n        \"Today\",\n        \"PatientProfile\",\n        \"status\",\n        \"viewRecord\",\n        \"startVisit\",\n        \"printSlip\",\n        \"cancle\",\n        \"patient_reg\",\n        \"updatePatient\",\n      ],\n      true\n    );\n    // this.menuObj.showItems(['ResisterPatient', 'addPatient'], true);\n  }\n\n  onEventRendered(args) {\n    args.element.style.backgroundColor = args.data.CategoryColor;\n  }\n\n  componentDidMount() {\n    axios.get(`/gender-dropdown`).then((res) => {\n      this.setState({\n        patientGenderDropdown: res.data.gender,\n      });\n    });\n\n    axios.get(`/blood-group`).then((res) => {\n      this.setState({\n        patientBloodDropdown: res.data.blood_group,\n      });\n    });\n    const SaasBaseUrl =\n      process.env.NODE_ENV === \"development\"\n        ? process.env.REACT_APP_DEV_SAAS_URL\n        : process.env.REACT_APP_PRO_SAAS_URL;\n    const SaasBaseVersionOne = SaasBaseUrl + \"/v1\";\n    const SaasAuthURL = SaasBaseVersionOne + \"/auth\";\n    axios\n      .get(SaasAuthURL + \"/branch/service/find-branch-by-organizationId\")\n      .then((res) => {\n        this.setState({ orgBranch: res.data.data });\n      });\n\n    //Error: react-modal: App element is not defined. Please use `Modal.setAppElement(el) ReactModal.setAppElement('body');`\n    ReactModal.setAppElement(\"body\");\n\n    axios.get(\"/department\").then((res) => {\n      this.setState({ doctorDepartment: res.data.department });\n    });\n\n    // if (this.state.DoctorSearchData === []) {\n    // axios.get('/all-doctors-booking').then(res => {\n    //   this.setState({ DoctorSearchData: res.data.doctors })\n    // })\n\n    if (JSON.parse(localStorage.getItem(\"userData\")).user_type === \"Doctor\") {\n      axios\n        .get(\n          `/doctor-search-id/${\n            JSON.parse(localStorage.getItem(\"userData\")).user_id\n          }`\n        )\n        .then((res) => {\n          this.setState({ DoctorSearchData: res.data });\n          console.log(\"test1\", res.data);\n        });\n    } else {\n      axios.get(\"/all-doctors-booking\").then((res) => {\n        this.setState({ DoctorSearchData: res.data.doctors });\n        console.log(\"test2\", res.data);\n      });\n    }\n\n    axios.get(\"/scheduler\").then((res) => {\n      const result = res.data.scheduleData.map((item) => {\n        return {\n          Id: item.id,\n          Subject: item.patient_name,\n          StartTime: item.StartTime,\n          EndTime: item.EndTime,\n          DoctorID: parseInt(item.doctors_id),\n          Location: item.patient_mobile,\n          Description: item.notes,\n          CategoryColor: item.status_color,\n          statusName: item.status_name,\n          patientID: item.patient_id,\n          appointCreated: item.created_at,\n        };\n      });\n      this.data = extend([], result, null, true);\n      this.setState({\n        scheduleData: result,\n      });\n\n      // if (this.state.existingPatient != null) {\n      //   this.data.push(this.state.existingPatient)\n      // }\n    });\n    // }\n  }\n\n  clearHandle() {\n    this.setState({ searchResult: null });\n    this.setState({ search: null });\n    this.setState({ errorData: null });\n\n    document.getElementById(\"output\").value = \"\";\n  }\n\n  handleChange(event) {\n    this.setState({ search: event.target.value });\n  }\n  user = JSON.parse(localStorage.getItem(\"userData\"));\n\n  searchHandeler(event) {\n    event.preventDefault();\n    if (this.state.search !== null) {\n      console.log(\"serche data\", this.state.search);\n      axios\n        .post(\n          `/patient-search-for-doctor/${this.state.search.replace(/\\s+/g, \"\")}`,\n          {\n            doctor_id: this.user?.user_id,\n          }\n        )\n        .then((res) => {\n          this.setState({ searchResult: res.data, errorData: null });\n        })\n        .catch((err) => {\n          this.setState({\n            errorData: \"No Data Found , Please Check Again?\",\n            searchResult: null,\n          });\n        });\n    } else {\n      alert(\"Please insert patient mobile or hn number\");\n    }\n  }\n\n  addExistingPatient() {\n    if (this.state.add_app_outside_of_schedule) {\n      console.log(\"start_time\", this.state.start_time);\n      if (!this.state.start_time) {\n        return swal(\n          \"Warning!\",\n          \"Please enter time for this appointment\",\n          \"warning\"\n        );\n      }\n      var end_time = new Date(this.state.start_time);\n      end_time.setMinutes(end_time.getMinutes() + 10);\n\n      console.log(\"start_time\", this.state.start_time);\n      console.log(\"end_time\", this.state.end_time);\n      var patientDetailsEisting = {\n        Subject: this.state.patient_data.fullName,\n        StartTime: this.state.start_time,\n        EndTime: end_time,\n        DoctorID: JSON.parse(localStorage.getItem(\"userData\")).user_id,\n        Location: this.state.patient_data.patient_mobile_phone,\n        patientID: this.state.patient_data.id,\n        statusName: \"Arrived\",\n        CategoryColor: \"#020131\",\n      };\n      this.scheduleObj.addEvent(patientDetailsEisting);\n      this.handleCloseModal();\n      this.setState({ app_type_model: false });\n    } else {\n      var patientDetails = {\n        Subject: this.state.patient_data.fullName,\n        StartTime: this.state.cellData.StartTime,\n        EndTime: this.state.cellData.EndTime,\n        DoctorID: parseInt(this.state.cellData.doctors_id),\n        Location: this.state.patient_data.patient_mobile_phone,\n        patientID: this.state.patient_data.id,\n        CategoryColor: \"#8961ed\",\n      };\n      this.scheduleObj.addEvent(patientDetails);\n      this.handleCloseModal();\n      this.setState({ app_type_model: false });\n    }\n\n    // console.log(\"exp\", patientDetails);\n  }\n  onActionBegin(args) {\n    if (args.requestType === \"toolbarItemRendering\") {\n      let exportItem = {\n        align: \"Right\",\n        showTextOn: \"Both\",\n        prefixIcon: \"e-icon-schedule-excel-export\",\n        text: \"Excel Export\",\n        cssClass: \"e-excel-export\",\n        click: this.onExportClick.bind(this),\n      };\n      args.items.push(exportItem);\n    }\n    if (args.requestType == \"eventCreate\") {\n      console.log(\"this.state.app_type\", this.state.app_type);\n      const patientDetails = {\n        doctors_id: args.addedRecords[0].DoctorID.toString(),\n        patient_name: args.addedRecords[0]?.Subject,\n        IsAllDay: false,\n        StartTime: args.addedRecords[0].StartTime,\n        EndTime: args.addedRecords[0].EndTime,\n        patient_mobile: args.addedRecords[0].Location,\n        notes: args.addedRecords[0].Description,\n        patient_id: args.addedRecords[0].patientID,\n        statusColor:\n          this.state.app_type === \"Telehealth\"\n            ? \"#ff7345\"\n            : args.addedRecords[0].CategoryColor,\n        app_type: this.state.app_type,\n        statusName: this.state.add_app_outside_of_schedule ? \"Arrived\" : null,\n      };\n      axios.post(\"/save-scheduler\", patientDetails).then((res) => {\n        axios.get(\"/scheduler\").then((res) => {\n          const result = res.data.scheduleData.map((item) => {\n            return {\n              Id: item.id,\n              Subject: item.patient_name,\n              StartTime: item.StartTime,\n              EndTime: item.EndTime,\n              DoctorID: parseInt(item.doctors_id),\n              Location: item.patient_mobile,\n              Description: item.notes,\n              CategoryColor: item.status_color,\n              statusName: item.status_name,\n              patientID: item.patient_id,\n              appointCreated: item.created_at,\n            };\n          });\n          this.data = extend([], result, null, true);\n          this.setState({\n            scheduleData: result,\n            app_type: \"Chamber\",\n          });\n\n          // if (this.state.existingPatient != null) {\n          //   this.data.push(this.state.existingPatient)\n          // }\n        });\n\n        if (res.data.saveData.patient_mobile != null) {\n          // const sms = `Wellcome to MHP,Thank you ${res.data.saveData.patient_name} for your Appiontment.Your appiontment booking time is: ${res.data.saveData.StartTime}`\n\n          const localData = localStorage.getItem(\"userData\");\n          const sms = `Dear Patient,Your appointment has been confirmed to Dr. ${\n            this.state.DoctorSearchData?.[0]?.fullName\n          } on ${moment(res.data.saveData.StartTime).format(\n            \"DD-MM-YYYY\"\n          )} at ${moment(res.data.saveData.StartTime).format(\n            \"hh:mm A\"\n          )}.Please come to doctor’s Chamber within designated time. For any queries, please call doctor's contact number. Thanks.`;\n\n          const data = {\n            message: sms,\n            number: res.data.saveData.patient_mobile,\n          };\n\n          axios\n            .post(\n              `${process.env.REACT_APP_DEV_SAAS_URL}/v1/auth/sms/send-sms`,\n              data\n            )\n            .then((res) => {\n              // toast.success(res?.data?.message || \"Message sent successfully\");\n            })\n            .catch((err) => console.log(err, \"send sms error\"));\n        }\n      });\n    } else if (args.requestType == \"eventChange\") {\n      const id = args.changedRecords[0].Id;\n      const updatePatientDetails = {\n        doctors_id: args.changedRecords[0].DoctorID.toString(),\n        doctor_name: this.state?.DoctorSearchData?.[0]?.fullName,\n        patient_name: args.changedRecords[0]?.Subject,\n        IsAllDay: false,\n        StartTime: args.changedRecords[0].StartTime,\n        EndTime: args.changedRecords[0].EndTime,\n        patient_mobile: args.changedRecords[0].Location,\n        notes: args.changedRecords[0].Description,\n        CategoryColor: args.changedRecords[0].CategoryColor,\n        statusName: args.changedRecords[0].statusName,\n        patientID: args.changedRecords[0].patientID,\n      };\n      axios\n        .post(`/update-scheduler/${id}`, updatePatientDetails)\n        .then((res) => {\n          axios.get(\"/scheduler\").then((res) => {\n            const result = res.data.scheduleData.map((item) => {\n              return {\n                Id: item.id,\n                Subject: item.patient_name,\n                StartTime: item.StartTime,\n                EndTime: item.EndTime,\n                DoctorID: parseInt(item.doctors_id),\n                Location: item.patient_mobile,\n                Description: item.notes,\n                CategoryColor: item.status_color,\n                statusName: item.status_name,\n                patientID: item.patient_id,\n                appointCreated: item.created_at,\n              };\n            });\n            this.data = extend([], result, null, true);\n            this.setState({\n              scheduleData: result,\n            });\n          });\n          // if (res.data.updatedData.patient_mobile != null) {\n          //   const sms = `Dear Patient, Your appointment is rescheduled to Dr. ${this.state.DoctorSearchData?.[0]?.fullName\n          //     } on ${moment(res.data.updatedData.StartTime).format(\n          //       \"DD-MM-YYYY\"\n          //     )} at ${moment(res.data.updatedData.StartTime).format(\n          //       \"hh:mm A\"\n          //     )}. Please come to doctor’s Chamber within designated time.For any queries, please call 09638 505 505. Thanks.`;\n\n          //   try {\n          //     axios\n          //       .post(\n          //         `https://api.boom-cast.com/boomcast/WebFramework/boomCastWebService/externalApiSendTextMessage.php?masking=NOMASK&userName=fauziaali2000@gmail.com&password=80f50e35f83130f022e78a2862aab390&MsgType=TEXT&receiver=${res.data.updatedData.patient_mobile}&message=${sms}`\n          //       )\n          //       .then((res) => { });\n          //   } catch (error) {\n          //     console.log(\"err\", error);\n          //   }\n          // }\n        });\n    } else if (args.requestType == \"eventRemove\") {\n      const id = args.deletedRecords[0].Id;\n\n      axios\n        .post(`/delete-scheduler/${id}`)\n        .then((res) => console.log(\"Data\", res.data));\n    }\n  }\n\n  onExportClick() {\n    this.scheduleObj.exportToExcel();\n  }\n\n  onPopupOpen(args) {\n    if (args.type === \"QuickInfo\") {\n      if (args.data.Id == null) {\n        args.element.getElementsByClassName(\n          \"e-subject e-field e-input\"\n        )[0].placeholder = \"Add New Patient Name\";\n\n        let dialogObj = document.querySelector(\".e-quick-popup-wrapper\")\n          .ej2_instances[0];\n        // Fetching the fotter element of the editor window\n        let footer = dialogObj.element.querySelector(\".e-popup-footer\");\n        // Creting the button element\n        let btnElement = createElement(\"BUTTON\", {\n          innerHTML: \"Existing Patient\",\n        });\n        // Creting the button object\n        let buttonObj = new Button();\n        // Appeding the button object to the button element\n        buttonObj.appendTo(btnElement);\n        // Appendig the creted button to the footer of the editor window.\n        footer.appendChild(btnElement);\n        // Binding the evnet to the custom button element\n        buttonObj.element.onclick = () => {\n          this.setState({ showModal: true });\n          args.element.ej2_instances[0].close();\n        };\n      } else {\n        if (args.data.patientID !== null) {\n          var date = new Date(args.data.StartTime);\n\n          var appDate =\n            date.getDate() +\n            \"/\" +\n            (date.getMonth() + 1) +\n            \"/\" +\n            date.getFullYear();\n\n          // var time = date.getHours() + \":\"\n          //           + date.getMinutes()\n\n          var hours = date.getHours();\n          var minutes = date.getMinutes();\n\n          var ampm = hours >= 12 ? \"pm\" : \"am\";\n          hours = hours % 12;\n          hours = hours ? hours : 12; // the hour '0' should be '12'\n          minutes = minutes < 10 ? \"0\" + minutes : minutes;\n          var apptime = hours + \":\" + minutes + \" \" + ampm;\n\n          this.setState({\n            appointmentDay: appDate,\n            appointmentTime: apptime,\n          });\n\n          axios.get(`/doctor-search-id/${args.data.DoctorID}`).then((res) => {\n            this.setState({\n              printDoctorData: res.data,\n            });\n          });\n\n          axios\n            .get(`/patient-search-by-id/${args.data.patientID}`)\n            .then((res) => {\n              var currentYear = new Date().getFullYear();\n              var birthDate = new Date(res.data.patient_dob).getFullYear();\n              var age = currentYear - birthDate;\n\n              this.setState({\n                patientValueForPrint: res.data,\n                age: age,\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n      }\n\n      const patientDetails = {\n        doctors_id: args.data.DoctorID.toString(),\n        IsAllDay: false,\n        StartTime: args.data.StartTime,\n        EndTime: args.data.EndTime,\n        patient_mobile: args.data.Location,\n      };\n      this.setState({\n        cellData: patientDetails,\n      });\n    }\n\n    if (args.type === \"Editor\") {\n      args.element.getElementsByClassName(\"e-title-text\")[0].innerHTML =\n        \"Patient Information\";\n    }\n\n    if (args.type === \"DeleteAlert\") {\n      document.getElementById(\"QuickDialog_title\").innerHTML =\n        \"Delete patient appointment\";\n      document.getElementById(\"QuickDialog_dialog-content\").innerHTML =\n        \"Are you sure you want to delete this appointment\";\n    }\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n      add_app_outside_of_schedule: false,\n      searchResult: null,\n      search: null,\n      errorData: null,\n    });\n  }\n\n  randomChange() {\n    var a = document.getElementById(\"patient\").value;\n\n    if (a == \"Mobile\") {\n      document.getElementsByName(\"output\")[0].placeholder = \"Mobile Number\";\n      document.getElementsByName(\"output\")[0].type = \"text\";\n      document.getElementsByName(\"output\")[0].value = \"\";\n    } else if (a == \"HIN\") {\n      document.getElementsByName(\"output\")[0].placeholder = \"HI Number\";\n      document.getElementsByName(\"output\")[0].type = \"text\";\n      document.getElementsByName(\"output\")[0].value = \"\";\n    } else {\n      document.getElementsByName(\"output\")[0].type = \"date\";\n      document.getElementsByName(\"output\")[0].value = \"\";\n    }\n  }\n\n  reactToPrintTrigger = () => {\n    return (\n      <span id=\"appointmentSlip\" className=\"printSlip\">\n        <i class=\"fas fa-print\"></i>Appointment Slip\n      </span>\n    );\n  };\n\n  customStyles = {\n    content: {\n      height: \"450px\",\n    },\n  };\n  customStylesExitingPat = {\n    content: {\n      height: \"73%\",\n    },\n  };\n  customStylesAppTypeModel = {\n    content: {\n      top: \"27%\",\n      left: \"10%\",\n      height: \"26vh\",\n      width: \"450px\",\n      zIndex: 10,\n    },\n  };\n\n  PatientModelColse() {\n    this.setState({ patient_regi_model_show: false });\n  }\n\n  handleImage = (e) => {\n    e.persist();\n    if (e.target.files[0].size < 2000048) {\n      this.setState({ image: e.target.files[0] });\n      this.setState({\n        image_error: \"\",\n      });\n    } else {\n      this.setState({\n        image_error: \"File size must be less than 2 mb !\",\n      });\n    }\n    if (\n      e.target.files &&\n      e.target.files[0] &&\n      e.target.files[0].size < 2000048\n    ) {\n      this.setState({\n        imageUrl: URL.createObjectURL(e.target.files[0]),\n      });\n      // setDoctors({ ...doctorsInput, doctorImageUrl: URL.createObjectURL(event.target.files[0]) });\n    } else {\n      this.setState({\n        image_error: \"File size must be less than 2 mb !\",\n      });\n    }\n  };\n\n  handleSubmitForPatient(e) {\n    e.preventDefault();\n\n    const userDataPatientAdd = JSON.parse(localStorage.getItem(\"userData\"));\n    const formData = new FormData();\n    formData.append(\"image\", this.state.image);\n    formData.append(\"age\", this.state.age);\n    formData.append(\"day\", this.state.days);\n    formData.append(\"month\", this.state.months);\n    // formData.append(\"patient_hn_number\", this.patient_hn_number.current.value);\n    formData.append(\n      \"patient_first_name\",\n      this.patient_first_name.current.value\n    );\n    formData.append(\n      \"patient_mobile_phone\",\n      this.patient_mobile_phone.current.value\n    );\n    formData.append(\"patient_email\", this.patient_email.current.value);\n    formData.append(\"patient_dob\", this.state.patient_dob);\n    formData.append(\n      \"ptn_blood_group_id\",\n      this.ptn_blood_group_id.current.value\n    );\n    formData.append(\n      \"patient_birth_sex_id\",\n      this.patient_birth_sex_id.current.value\n    );\n    formData.append(\"patient_address1\", this.patient_address1.current.value);\n    formData.append(\"patient_status\", \"1\");\n    formData.append(\"doctor_id\", this.user?.user_id || 0);\n\n    if (userDataPatientAdd?.user_type !== \"Super_Admin\") {\n      formData.append(\"saas_branch_id\", userDataPatientAdd?.branch_id);\n      formData.append(\"saas_branch_id\", userDataPatientAdd?.branch_name);\n    } else {\n      formData.append(\"saas_branch_id\", this.saas_branch_id.current.value);\n      formData.append(\n        \"saas_branch_name\",\n        this.state.orgBranch?.find(\n          (b) => b?.id === Number(this.saas_branch_id.current.value)\n        )?.name\n      );\n    }\n\n    axios\n      .post(`/save-patients`, formData)\n      .then((res) => {\n        this.scheduleObj.saveEvent({\n          Description: this.state.patientEventData.Description,\n          DoctorID: this.state.patientEventData.DoctorID,\n          EndTime: this.state.patientEventData.EndTime,\n          Id: this.state.patientEventData.Id,\n          Location: res.data.patients.patient_mobile_phone,\n          StartTime: this.state.patientEventData.StartTime,\n          Subject: this.state.patientEventData?.Subject,\n          appointCreated: this.state.patientEventData.appointCreated,\n          patientID: res.data.patients.id,\n          CategoryColor: \"#8961ed\",\n        });\n\n        Swal.fire(\"Patient Registration Succesfully\", \"Success..!\", \"success\");\n        this.setState({\n          patient_regi_model_show: false,\n        });\n\n        this.setState({\n          imageUrl: \"\",\n        });\n      })\n      .catch((err) => {\n        Swal.fire(\"Something is wrong\", \"Error..!\", \"error\");\n        console.log(\"wrong\", err.message);\n      });\n  }\n  // age calculation\n  // age calculation\n  calculateDateFromAge = (days = 0, months = 0, years = 0) => {\n    const currentDate = new Date();\n\n    // Subtract the provided values from the current date\n    const calculatedDate = new Date(\n      currentDate.getFullYear() - years,\n      currentDate.getMonth() - months,\n      currentDate.getDate() - days\n    );\n\n    // Check for invalid date\n    if (isNaN(calculatedDate.getTime())) {\n      return { error: \"Invalid date input\" };\n    }\n\n    return { date: calculatedDate };\n  };\n  calculateAgeFromDate = (inputDate) => {\n    const givenDate = new Date(inputDate);\n    const currentDate = new Date();\n\n    // Check for invalid date input\n    if (isNaN(givenDate.getTime())) {\n      return { error: \"Invalid date input\" };\n    }\n\n    // Calculate differences\n    let years = currentDate.getFullYear() - givenDate.getFullYear();\n    let months = currentDate.getMonth() - givenDate.getMonth();\n    let days = currentDate.getDate() - givenDate.getDate();\n\n    // Adjust for negative values in months and days\n    if (days < 0) {\n      months -= 1;\n      // Get the number of days in the previous month\n      const previousMonth = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth(),\n        0\n      );\n      days += previousMonth.getDate();\n    }\n\n    if (months < 0) {\n      years -= 1;\n      months += 12;\n    }\n\n    return { years, months, days };\n  };\n\n  handleAge = (days, months, years) => {\n    const { date, error } = this.calculateDateFromAge(days, months, years);\n    if (!error) {\n      this.setState({\n        patient_dob: date,\n        age: `${years || 0}`,\n        days: days,\n        months: months,\n        years: years,\n      });\n    } else {\n      console.error(error);\n    }\n  };\n  handleDate = (inputDate) => {\n    const { years, months, days, error } = this.calculateAgeFromDate(inputDate);\n    if (!error) {\n      this.handleAge(days, months, years);\n    }\n  };\n  // age calculation\n\n  closeImage = () => {\n    this.setState({\n      imageUrl: \"\",\n    });\n    document.getElementById(\"PatientImageUrl\").value = \"\";\n  };\n\n  render() {\n    console.log(\"doctor\", this.state.DoctorSearchData);\n    return (\n      <>\n        <ComponentToPrint\n          patientVale={this.state.patientValueForPrint}\n          patentAge={this.state.age}\n          doctorData={this.state.printDoctorData}\n          appointDay={this.state.appointmentDay}\n          appointTime={this.state.appointmentTime}\n          ref={(el) => (this.componentRef = el)}\n        ></ComponentToPrint>\n        <NewModal\n          isOpen={this.state.patient_regi_model_show}\n          onClose={() => this.setState({ patient_regi_model_show: false })}\n          size=\"md\"\n        >\n          <NewModal.Header\n            onClose={() => this.setState({ patient_regi_model_show: false })}\n          >\n            <NewModal.Title>Patient Registration</NewModal.Title>\n          </NewModal.Header>\n\n          <form onSubmit={this.handleSubmitForPatient}>\n            <NewModal.Body styles={{ minHeight: \"400px\" }}>\n              <div className=\"ml-1 reg-form-appointment\">\n                <div className=\" row p-1 m-1 mt-3\">\n                  <div className=\"col-md-12 mt-3\">\n                    <div class=\"row mb-3\">\n                      <label for=\"app-reg-label\" class=\"col-sm-2 app-reg-label\">\n                        Name <span style={{ color: \"red\" }}>*</span>\n                      </label>\n                      <div class=\"col-sm-10\">\n                        <input\n                          type=\"text\"\n                          ref={this.patient_first_name}\n                          defaultValue={this.state.patientEventData?.Subject}\n                          className=\"form-control form-control-sm\"\n                          style={{ border: \"1px solid red\" }}\n                          placeholder=\"Enter Name\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Date Of Birth <span style={{ color: \"red\" }}>*</span>\n                      </label>\n                      <div class=\"col-sm-4\">\n                        <ReactDatePicker\n                          dropdownMode=\"select\"\n                          selected={\n                            this.state?.patient_dob\n                              ? this.state?.patient_dob\n                              : new Date()\n                          }\n                          onChange={(date) => {\n                            this.handleDate(date);\n                          }}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                      </div>\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Email\n                      </label>\n                      <div class=\"col-sm-4\">\n                        <input\n                          type=\"email\"\n                          name=\"patient_email\"\n                          ref={this.patient_email}\n                          class=\"form-control form-control-sm\"\n                          placeholder=\"Enter Email\"\n                        />\n                      </div>\n                      <label\n                        for=\"app-reg-label\"\n                        className=\"col-sm-2 app-reg-label mt-2\"\n                      >\n                        Age\n                      </label>\n                      <div className=\"col-sm-10 mt-3\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-4 row\">\n                            <div className=\"col-3\">Day</div>\n                            <div className=\"col-9\">\n                              <input\n                                type=\"number\"\n                                name=\"age\"\n                                max={200}\n                                className=\"form-control form-control-sm\"\n                                placeholder=\"Enter Days\"\n                                value={this.state?.days}\n                                onChange={(e) =>\n                                  this.handleAge(\n                                    e.target.value,\n                                    this.state?.months || 0,\n                                    this.state?.years || 0\n                                  )\n                                }\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-sm-4 row\">\n                            <div className=\"col-3\">Month</div>\n                            <div className=\"col-9\">\n                              <input\n                                type=\"number\"\n                                name=\"age\"\n                                max={200}\n                                className=\"form-control form-control-sm\"\n                                placeholder=\"Enter Month\"\n                                value={this.state?.months}\n                                onChange={(e) =>\n                                  this.handleAge(\n                                    this.state?.days || 0,\n                                    e.target.value,\n                                    this.state?.years || 0\n                                  )\n                                }\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-sm-4 row\">\n                            <div className=\"col-3\">Year</div>\n                            <div className=\"col-9\">\n                              <input\n                                type=\"number\"\n                                name=\"age\"\n                                max={200}\n                                className=\"form-control form-control-sm\"\n                                placeholder=\"Enter Year\"\n                                value={this.state?.years}\n                                onChange={(e) =>\n                                  this.handleAge(\n                                    this.state?.days || 0,\n                                    this.state?.months || 0,\n                                    e.target.value\n                                  )\n                                }\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Mobile No. <span style={{ color: \"red\" }}>*</span>\n                      </label>\n                      <div class=\"col-sm-4\">\n                        <input\n                          type=\"text\"\n                          name=\"patient_mobile_phone\"\n                          ref={this.patient_mobile_phone}\n                          class=\"form-control form-control-sm\"\n                          placeholder=\"Enter Mobile No.\"\n                        />\n                      </div>\n\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Blood Group\n                      </label>\n                      <div class=\"col-sm-4\">\n                        <select\n                          class=\"form-select form-select-sm\"\n                          ref={this.ptn_blood_group_id}\n                          name=\"ptn_blood_group_id\"\n                          id=\"autoSizingSelect\"\n                        >\n                          <option selected>Select Blood Group</option>\n\n                          {this.state.patientBloodDropdown.map((i) => {\n                            return (\n                              <option value={i.id}>{i.blood_group_name}</option>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Gender <span style={{ color: \"red\" }}>*</span>\n                      </label>\n                      <div\n                        class={`${\n                          JSON.parse(localStorage.getItem(\"userData\"))\n                            ?.user_type === \"Super_Admin\"\n                            ? \"col-sm-4\"\n                            : \"col-sm-10\"\n                        }`}\n                      >\n                        <select\n                          class=\"form-select form-select-sm\"\n                          name=\"patient_birth_sex_id\"\n                          ref={this.patient_birth_sex_id}\n                          id=\"autoSizingSelect\"\n                        >\n                          <option selected>Select Gender</option>\n                          {this.state.patientGenderDropdown.map((item) => {\n                            return (\n                              <>\n                                <option value={item.id}>\n                                  {item.birth_sex_name}\n                                </option>\n                              </>\n                            );\n                          })}\n                        </select>\n                      </div>\n                      {JSON.parse(localStorage.getItem(\"userData\"))\n                        ?.user_type === \"Super_Admin\" ? (\n                        <>\n                          <label\n                            for=\"app-reg-label\"\n                            class=\"col-sm-2 app-reg-label \"\n                          >\n                            Branch <span style={{ color: \"red\" }}>*</span>\n                          </label>\n                          <div class=\"col-sm-4\">\n                            <select\n                              class=\"form-select form-select-sm\"\n                              name=\"patient_birth_sex_id\"\n                              ref={this.saas_branch_id}\n                              id=\"orgBranch\"\n                              required\n                            >\n                              <option selected value={\"\"}>\n                                Select branch\n                              </option>\n                              {this.state.orgBranch.map((item) => {\n                                return (\n                                  <>\n                                    <option value={item.id}>{item.name}</option>\n                                  </>\n                                );\n                              })}\n                            </select>\n                          </div>\n                        </>\n                      ) : null}\n                    </div>\n\n                    <div class=\"row mb-2 P_Image\">\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Address{\" \"}\n                      </label>\n                      <div class=\"col-sm-4\">\n                        <textarea\n                          name=\"patient_address1\"\n                          ref={this.patient_address1}\n                          class=\"form-control form-control-sm\"\n                          rows=\"3\"\n                          placeholder=\"Enter Address\"\n                        />\n                      </div>\n                      <label\n                        for=\"app-reg-label\"\n                        class=\"col-sm-2 app-reg-label \"\n                      >\n                        Image\n                      </label>\n                      <div class=\"col-sm-4\">\n                        <input\n                          className=\"form-control\"\n                          id=\"PatientImageUrl\"\n                          onChange={this.handleImage.bind(this)}\n                          type=\"file\"\n                        />\n\n                        {this.state.image_error == \"\" ? (\n                          <p className=\"doc_image_size\">\n                            Image size must be less than 2 mb\n                          </p>\n                        ) : (\n                          <p className=\"docimage_error\">\n                            {this.state.image_error}\n                          </p>\n                        )}\n                      </div>\n                      <div class=\"col-sm-4\">\n                        {this.state.imageUrl == \"\" ? (\n                          \"\"\n                        ) : (\n                          <div className=\"docImage\">\n                            <img\n                              src={this.state.imageUrl}\n                              className=\"schedulePaitimage\"\n                              alt=\"preview img\"\n                            />\n                            <i\n                              onClick={this.closeImage.bind(this)}\n                              class=\"far fa-times-circle\"\n                            ></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </NewModal.Body>\n            <NewModal.Footer className=\"d-flex justify-content-end\">\n              <button\n                onClick={this.PatientModelColse}\n                type=\"button\"\n                class=\"vaital-setup-btn-cancel float-end mr-2\"\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" class=\"vaital-setup-btn float-end\">\n                Save\n              </button>\n            </NewModal.Footer>\n          </form>\n        </NewModal>\n        <NewModal\n          // style={this.customStylesExitingPat}\n          isOpen={this.state.showModal}\n          onClose={this.handleCloseModal}\n          // appElement={document.getElementById(\"app\")}\n          // contentLabel=\"Example Modal\"\n        >\n          <NewModal.Header onClose={this.handleCloseModal}>\n            <NewModal.Title>Registered Patient List</NewModal.Title>\n          </NewModal.Header>\n          <NewModal.Body\n            styles={{\n              minHeight: \"400px\",\n            }}\n          >\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <div className=\"model_sub_heading\">\n                <label className=\"Label1\">Chose an option</label>\n                <select\n                  name=\"patient\"\n                  id=\"patient\"\n                  onChange={this.randomChange}\n                >\n                  <option>Mobile</option>\n                  <option selected>HN</option>\n                  <option>DOB</option>\n                </select>\n                <input\n                  id=\"output\"\n                  name=\"output\"\n                  type=\"text\"\n                  placeholder=\"Search here...\"\n                  value={this.state.search}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      this.searchHandeler(e);\n                    }\n                  }}\n                  onChange={this.handleChange}\n                />\n                <button\n                  className=\"customButton1 search\"\n                  onClick={this.searchHandeler}\n                >\n                  Search\n                </button>\n                <button\n                  className=\"customButton1 clear\"\n                  onClick={this.clearHandle}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n\n            {this.state.errorData !== null && (\n              <h4 className=\"errorH4\" style={{ textAlign: \"center\" }}>\n                {this.state.errorData}\n              </h4>\n            )}\n\n            {this.state.searchResult !== null && (\n              <div>\n                <h5 className=\"h5\" style={{ textAlign: \"center\" }}>\n                  Patient Information\n                </h5>\n                <table className=\"pTable\">\n                  <thead>\n                    <tr className=\"tr1\">\n                      <th className=\"th1\">Patient Name</th>\n                      <th className=\"th1\">HN no</th>\n                      <th className=\"th1\">Phone no</th>\n                      <th className=\"th1\">DOB</th>\n                      <th className=\"th1\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.searchResult != null ? (\n                      this.state.searchResult.map((item) => {\n                        return (\n                          <tr key={item.id} className=\"tr1\">\n                            <td className=\"td1\">{item.fullName}</td>\n                            <td className=\"td1\">\n                              {formateHN(item.patient_hn_number)}\n                            </td>\n                            <td className=\"td1\">\n                              {formatPhoneNumber(item.patient_mobile_phone)}\n                            </td>\n                            <td className=\"td1\">\n                              {moment(item.patient_dob).format(\"DD/MM/YYYY\")}\n                            </td>\n                            <td className=\"td1\">\n                              <span\n                                onClick={(e) => {\n                                  this.setState({ app_type_model: true });\n                                  this.setState({ patient_data: item });\n                                  // this.addExistingPatient(e, item)\n                                }}\n                              >\n                                <i class=\"fas fa-user-plus iconPatient\"></i>\n                              </span>\n                            </td>\n                          </tr>\n                        );\n                      })\n                    ) : (\n                      <tr></tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </NewModal.Body>\n          {/* </div> */}\n        </NewModal>\n\n        <NewModal\n          // style={this.customStylesAppTypeModel}\n          // className=\"appointment_type_modal\"\n          size=\"sm\"\n          isOpen={this.state.app_type_model}\n          onClose={() => this.setState({ app_type_model: false })}\n          // appElement={document.getElementById(\"app\")}\n          // contentLabel=\"Example Modal\"\n        >\n          <NewModal.Header\n            onClose={() => this.setState({ app_type_model: false })}\n          >\n            <NewModal.Title>Appointment Type</NewModal.Title>\n          </NewModal.Header>\n\n          <NewModal.Body>\n            <div>\n              {/* <div className=\"d-flex justify-content-between\">\n              <h6>Appointment Type</h6>\n              <div onClick={() => this.setState({ app_type_model: false })}>\n                <i className=\"fas fa-times\"></i>\n              </div>\n            </div>\n            <div className=\"Line\"></div> */}\n\n              <div className=\"d-flex justify-content-between\">\n                <div className=\"d-flex\">\n                  <div class=\"form-check \">\n                    <input\n                      value=\"Telehealth\"\n                      onChange={(e) =>\n                        this.setState({ app_type: e.target.value })\n                      }\n                      class=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"flexRadioDefault\"\n                      id=\"flexRadioDefault1\"\n                    />\n                    <label>Telehealth</label>\n                  </div>\n                  <div class=\"form-check\" style={{ marginLeft: \"20px\" }}>\n                    <input\n                      class=\"form-check-input\"\n                      value=\"Chamber\"\n                      onChange={(e) =>\n                        this.setState({ app_type: e.target.value })\n                      }\n                      type=\"radio\"\n                      name=\"flexRadioDefault\"\n                      id=\"flexRadioDefault2\"\n                      defaultChecked\n                    />\n                    <label>Chamber</label>\n                  </div>\n                  {this.state.add_app_outside_of_schedule && (\n                    <div style={{ width: \"40%\", marginLeft: \"6px\" }}>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <TimeField\n                          onChange={(v) => this.setState({ start_time: v.$d })}\n                          label=\"Start Time\"\n                          size=\"small\"\n                        />\n                      </LocalizationProvider>\n                    </div>\n                  )}\n                </div>\n                {this.state.add_app_outside_of_schedule ? (\n                  <button\n                    onClick={() => this.addExistingPatient()}\n                    className=\"app_btn\"\n                    style={{ width: \"30%\" }}\n                  >\n                    <i\n                      style={{ marginRight: \"6px\", fontSize: \"14px\" }}\n                      class=\"fas fa-user-plus\"\n                    ></i>\n                    Save App.\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => this.addExistingPatient()}\n                    className=\"app_btn\"\n                  >\n                    <i\n                      style={{ marginRight: \"6px\", fontSize: \"14px\" }}\n                      class=\"fas fa-user-plus\"\n                    ></i>\n                    Add App.\n                  </button>\n                )}\n              </div>\n            </div>\n          </NewModal.Body>\n        </NewModal>\n\n        <div className=\"appointmentShedule ms-2\">\n          <div\n            className={`sheduleHeader custom-card mt-2 mb-2 ${\n              JSON.parse(localStorage.getItem(\"userData\")).user_type !==\n              \"Doctor\"\n                ? \"\"\n                : `d-flex justify-content-end`\n            }`}\n          >\n            {JSON.parse(localStorage.getItem(\"userData\")).user_type !==\n              \"Doctor\" && (\n              <div className=\"doctorSearch\">\n                <div className=\"docNameSearch\">\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    size=\"small\"\n                    options={this.state.DoctorSearchData}\n                    getOptionLabel={(option) => option?.fullName}\n                    onChange={(e, newValue) => {\n                      if (newValue !== null) {\n                        axios\n                          .get(\n                            `/doctor-search-by-name/${newValue?.dr_given_name}`\n                          )\n                          .then((res) => {\n                            this.setState({\n                              DoctorSearchData: res.data,\n                            });\n                          })\n                          .catch((err) => {\n                            swal(\"Warning!\", \"Data not found\", \"warning\");\n                          });\n                      } else {\n                        axios.get(\"/all-doctors-booking\").then((res) => {\n                          this.setState({ DoctorSearchData: res.data.doctors });\n                        });\n                      }\n                    }}\n                    sx={{ width: 200 }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Doctors\" />\n                    )}\n                  />\n                </div>\n                <div className=\"deptSearch\">\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    size=\"small\"\n                    options={this.state.doctorDepartment}\n                    getOptionLabel={(option) => option.departments_name}\n                    onChange={(e, newValue) => {\n                      if (newValue !== null) {\n                        axios\n                          .get(`/doctor-search/${newValue.id}`)\n                          .then((res) => {\n                            this.setState({\n                              DoctorSearchDataForDepartment: res.data,\n                            });\n                          })\n                          .catch((err) => {\n                            swal(\"Warning!\", \"Data not found\", \"warning\");\n                          });\n                      } else {\n                        this.setState({\n                          DoctorSearchDataForDepartment: false,\n                        });\n                      }\n                    }}\n                    sx={{ width: 200 }}\n                    renderInput={(params) => (\n                      <TextField {...params} label=\"Department\" />\n                    )}\n                  />\n                </div>\n                <div>\n                  {this.state.DoctorSearchDataForDepartment == false ? (\n                    <></>\n                  ) : (\n                    <>\n                      {\n                        <Autocomplete\n                          multiple\n                          id=\"checkboxes-tags-demo\"\n                          size=\"small\"\n                          options={this.state.DoctorSearchDataForDepartment}\n                          disableCloseOnSelect\n                          getOptionLabel={(option) => option?.dr_given_name}\n                          onChange={(e, value) => {\n                            if (value.length > 0) {\n                              this.setState({\n                                DoctorSearchData: value,\n                              });\n                            } else {\n                              axios.get(\"/all-doctors-booking\").then((res) => {\n                                this.setState({\n                                  DoctorSearchData: res.data.doctors,\n                                });\n                              });\n                            }\n                          }}\n                          renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                              <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                              />\n                              {option?.dr_given_name}\n                            </li>\n                          )}\n                          style={{ width: 200 }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Selected Doctors\"\n                              placeholder=\"Doctors\"\n                            />\n                          )}\n                        />\n                      }\n                    </>\n                  )}\n                </div>\n              </div>\n            )}\n            {/* {\n              JSON.parse(localStorage.getItem('userData')).user_type !== 'Doctor'\n              && <div className='doctorSearch'>\n                <div className='docNameSearch'>\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    size=\"small\"\n                    options={this.state.DoctorSearchData}\n                    getOptionLabel={(option) => option?.dr_given_name}\n                    onChange={(e, newValue) => {\n                      if (newValue !== null) {\n                        axios.get(`/doctor-search-by-name/${newValue?.dr_given_name}`).then(res => {\n\n                          this.setState({\n                            DoctorSearchData: res.data\n                          })\n\n                        }).catch(err => {\n                          swal(\"Warning!\", \"Data not found\", \"warning\");\n                        })\n                      } else {\n                        axios.get('/all-doctors-booking').then(res => {\n                          this.setState({ DoctorSearchData: res.data.doctors })\n\n                        })\n                      }\n\n\n                    }}\n\n                    sx={{ width: 200 }}\n                    renderInput={(params) => <TextField {...params} label=\"Doctors\" />}\n                  />\n                </div>\n                <div className='deptSearch'>\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    size=\"small\"\n                    options={this.state.doctorDepartment}\n                    getOptionLabel={(option) => option.departments_name}\n                    onChange={(e, newValue) => {\n                      if (newValue !== null) {\n                        axios.get(`/doctor-search/${newValue.id}`).then(res => {\n                          this.setState({\n                            DoctorSearchDataForDepartment: res.data\n                          })\n                        }).catch(err => {\n                          swal(\"Warning!\", \"Data not found\", \"warning\");\n                        })\n                      } else {\n                        this.setState({\n                          DoctorSearchDataForDepartment: false\n                        })\n                      }\n                    }}\n                    sx={{ width: 200 }}\n                    renderInput={(params) => <TextField {...params} label=\"Department\" />}\n                  />\n                </div>\n                <div>\n\n                  {\n                    this.state.DoctorSearchDataForDepartment == false ?\n                      <></> :\n                      <>\n\n                        {\n\n                          <Autocomplete\n                            multiple\n                            id=\"checkboxes-tags-demo\"\n                            size=\"small\"\n                            options={this.state.DoctorSearchDataForDepartment}\n                            disableCloseOnSelect\n                            getOptionLabel={(option) => option?.dr_given_name}\n                            onChange={(e, value) => {\n                              if (value.length > 0) {\n                                this.setState({\n                                  DoctorSearchData: value\n                                })\n                              } else {\n                                axios.get('/all-doctors-booking').then(res => {\n                                  this.setState({ DoctorSearchData: res.data.doctors })\n\n                                })\n                              }\n\n                            }}\n                            renderOption={(props, option, { selected }) => (\n                              <li {...props}>\n                                <Checkbox\n                                  icon={icon}\n                                  checkedIcon={checkedIcon}\n                                  style={{ marginRight: 8 }}\n                                  checked={selected}\n                                />\n                                {option?.dr_given_name}\n                              </li>\n                            )}\n                            style={{ width: 200 }}\n                            renderInput={(params) => (\n                              <TextField {...params} label=\"Selected Doctors\" placeholder=\"Doctors\" />\n                            )}\n                          />\n                        }\n                      </>\n                  }\n\n                </div>\n              </div>\n            } */}\n\n            <>\n              <ReactToPrint\n                trigger={this.reactToPrintTrigger}\n                content={() => this.componentRef}\n              />\n\n              <i\n                class=\"fa-solid fa-user-plus\"\n                onClick={() =>\n                  this.setState({\n                    showModal: true,\n                    add_app_outside_of_schedule: true,\n                  })\n                }\n                style={{\n                  marginLeft: \"13px\",\n                  marginTop: \"-6px\",\n                  cursor: \"pointer\",\n                }}\n              ></i>\n            </>\n          </div>\n          {this.state.DoctorSearchData === \"\" ? (\n            <div className=\"schedule-control-section\">\n              <div className=\"col-lg-12 control-section\">\n                <div className=\"control-wrapper\">\n                  <ScheduleComponent\n                    eventRendered={this.onEventRendered.bind(this)}\n                    ref={(t) => (this.scheduleObj = t)}\n                    allowResizing={true}\n                    timeScale={{ enable: true, interval: 60, slotCount: 6 }}\n                    currentView=\"Day\"\n                    categorizeSettings-enable={true}\n                    minDate={new Date(2020, 12, 12)}\n                    // cssClass='group-bychild'\n                    width=\"100%\"\n                    height=\"650px\"\n                    selectedDate={new Date().toLocaleDateString()}\n                    eventSettings={{\n                      dataSource: this.data,\n                      enableTooltip: true,\n                      fields: {\n                        id: \"Id\",\n                        subject: {\n                          name: \"Subject\",\n                          title: \"Patient Name\",\n                          validation: { required: true },\n                        },\n                        location: {\n                          name: \"Location\",\n                          title: \"Mobile No\",\n                          validation: { required: true },\n                        },\n                        description: { name: \"Description\", title: \"Notes\" },\n                        startTime: {\n                          name: \"StartTime\",\n                          title: \"Start Duration\",\n                          validation: { required: true },\n                        },\n                        endTime: {\n                          name: \"EndTime\",\n                          title: \"End Duration\",\n                          validation: { required: true },\n                        },\n                      },\n                    }}\n                    group={{ byGroupID: false, resources: [\"Doctors\"] }}\n                    actionBegin={this.onActionBegin.bind(this)}\n                    rowAutoHeight={true}\n                    popupOpen={this.onPopupOpen.bind(this)}\n                  >\n                    <ResourcesDirective>\n                      <ResourceDirective\n                        field=\"DoctorID\"\n                        title=\"Select Doctors\"\n                        name=\"Doctors\"\n                        allowMultiple={true}\n                        dataSource={this.state.DoctorSearchData}\n                        textField=\"fullName\"\n                        idField=\"id\"\n                      ></ResourceDirective>\n                    </ResourcesDirective>\n                    <ViewsDirective>\n                      <ViewDirective\n                        option=\"Day\"\n                        startHour=\"00:00\"\n                        endHour=\"24:00\"\n                        timeScale={{ enable: true, slotCount: 6 }}\n                      />\n                      <ViewDirective\n                        option=\"Week\"\n                        startHour=\"00:00\"\n                        endHour=\"24:00\"\n                      />\n                      <ViewDirective\n                        option=\"WorkWeek\"\n                        workDays={[7, 0, 1, 2, 3, 4]}\n                        startHour=\"00:00\"\n                        endHour=\"24:00\"\n                      />\n                      <ViewDirective\n                        option=\"Month\"\n                        startHour=\"00:00\"\n                        endHour=\"24:00\"\n                      />\n                    </ViewsDirective>\n                    <Inject\n                      services={[\n                        Day,\n                        Week,\n                        WorkWeek,\n                        Month,\n                        Agenda,\n                        Resize,\n                        DragAndDrop,\n                        ExcelExport,\n                      ]}\n                    />\n                  </ScheduleComponent>\n                </div>\n                <ContextMenuComponent\n                  cssClass=\"schedule-context-menu\"\n                  ref={(menu) => (this.menuObj = menu)}\n                  target=\".e-schedule\"\n                  beforeOpen={this.onContextMenuBeforeOpen.bind(this)}\n                  items={this.menuItems}\n                  select={this.onMenuItemSelect.bind(this)}\n                />\n                {/* <ContextMenuComponent\n                 target='.e-schedule' items={this.menuItems}\n                 select={this.onMenuItemSelect.bind(this)}\n                 /> */}\n                {/* <ContextMenuComponent\n                 target= '.e-table-container' items={this.menuItems}\n                 select={this.onMenuItemSelect.bind(this)}\n                 /> */}\n                <div className=\"legendField custom-card\">\n                  <div className=\"legendLevel\">\n                    <span className=\"e-menu-icon fas fa-circle arrived\"></span>\n                    Arrived\n                  </div>\n                  <div className=\"legendLevel\">\n                    <span className=\"e-menu-icon fas fa-circle unavilable\"></span>\n                    Unavailable\n                  </div>\n                  <div className=\"legendLevel\">\n                    <span className=\"e-menu-icon fas fa-circle waiting\"></span>\n                    Waiting\n                  </div>\n                  <div className=\"legendLevel\">\n                    <span className=\"e-menu-icon fas fa-circle withdoctors\"></span>\n                    With Doctors\n                  </div>\n                  <div className=\"legendLevel\">\n                    <span className=\"e-menu-icon fas fa-circle attbilling\"></span>\n                    At billing\n                  </div>\n                  <div className=\"legendLevel\">\n                    <span className=\"e-menu-icon fas fa-circle notattend\"></span>\n                    Did not attend\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"schedule-control-section\">\n              <div className=\"control-section\">\n                <div className=\"control-wrapper\">\n                  <ScheduleComponent\n                    eventRendered={this.onEventRendered.bind(this)}\n                    ref={(t) => (this.scheduleObj = t)}\n                    allowResizing={true}\n                    currentView=\"Day\"\n                    categorizeSettings-enable={true}\n                    minDate={new Date(2020, 12, 12)}\n                    cssClass=\"group-bychild\"\n                    width=\"100%\"\n                    height=\"650px\"\n                    selectedDate={new Date().toLocaleDateString()}\n                    eventSettings={{\n                      dataSource: this.data,\n                      enableTooltip: true,\n                      fields: {\n                        id: \"Id\",\n                        subject: {\n                          name: \"Subject\",\n                          title: \"Patient Name\",\n                          validation: { required: true },\n                        },\n                        location: {\n                          name: \"Location\",\n                          title: \"Mobile No\",\n                          validation: { required: true },\n                        },\n                        description: { name: \"Description\", title: \"Notes\" },\n                        startTime: {\n                          name: \"StartTime\",\n                          title: \"Start Duration\",\n                          validation: { required: true },\n                        },\n                        endTime: {\n                          name: \"EndTime\",\n                          title: \"End Duration\",\n                          validation: { required: true },\n                        },\n                      },\n                    }}\n                    group={{ byGroupID: false, resources: [\"Doctors\"] }}\n                    actionBegin={this.onActionBegin.bind(this)}\n                    rowAutoHeight={true}\n                    popupOpen={this.onPopupOpen.bind(this)}\n                  >\n                    <ResourcesDirective>\n                      <ResourceDirective\n                        field=\"DoctorID\"\n                        title=\"Select Doctors\"\n                        name=\"Doctors\"\n                        allowMultiple={true}\n                        dataSource={this.state.DoctorSearchData}\n                        textField=\"fullName\"\n                        idField=\"id\"\n                      ></ResourceDirective>\n                    </ResourcesDirective>\n                    <ViewsDirective>\n                      <ViewDirective\n                        option=\"Day\"\n                        startHour=\"08:00\"\n                        endHour=\"24:00\"\n                        timeScale={{ enable: true, slotCount: 6 }}\n                      />\n                      <ViewDirective\n                        option=\"Week\"\n                        startHour=\"00:0\"\n                        endHour=\"24:00\"\n                      />\n                      <ViewDirective\n                        option=\"WorkWeek\"\n                        workDays={[7, 0, 1, 2, 3, 4]}\n                        startHour=\"00:00\"\n                        endHour=\"24:00\"\n                      />\n                      <ViewDirective\n                        option=\"Month\"\n                        startHour=\"00:00\"\n                        endHour=\"24:00\"\n                      />\n                    </ViewsDirective>\n                    <Inject\n                      services={[\n                        Day,\n                        Week,\n                        WorkWeek,\n                        Month,\n                        Agenda,\n                        ExcelExport,\n                        Resize,\n                        DragAndDrop,\n                        ExcelExport,\n                      ]}\n                    />\n                  </ScheduleComponent>\n                </div>\n                <ContextMenuComponent\n                  cssClass=\"schedule-context-menu\"\n                  ref={(menu) => (this.menuObj = menu)}\n                  target=\".e-schedule\"\n                  beforeOpen={this.onContextMenuBeforeOpen.bind(this)}\n                  items={this.menuItems}\n                  select={this.onMenuItemSelect.bind(this)}\n                />\n                {/* <ContextMenuComponent\n                 target='.e-table-container' items={this.menuItems}\n                 select={this.onMenuItemSelect.bind(this)}\n                 /> */}\n                {/* <ContextMenuComponent\n                select={this.onMenuItemSelect.bind(this)}\n               target= '.e-work-cells' items={this.menuItems}/> */}\n\n                <ShowForSmallDevicesAppointmentStatus />\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n"],"names":["enableRipple","SampleBase","setTimeout","rendereComplete","React","ComponentToPrint","user","JSON","parse","localStorage","getItem","console","log","this","props","patientVale","patient","id","className","src","organization_logo","alt","organization_name","organization_address","organization_mobile","patient_first_name","patient_middle_name","patient_last_name","patient_dob","patient_hn_number","moment","diff","Date","format","patient_mobile_phone","appointDay","appointTime","doctorData","dr_given_name","displayValue","height","width","value","Component","ShowForSmallDevicesAppointmentStatus","useResizeObserver","style","display","gridTemplateColumns","gap","padding","backgroundColor","margin","borderRadius","icon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","L10n","schedule","saveButton","cancelButton","deleteButton","save","AppointmentScheduler","arguments","reactToPrintTrigger","class","customStyles","content","customStylesExitingPat","customStylesAppTypeModel","top","left","zIndex","handleImage","e","persist","target","files","size","setState","image","image_error","imageUrl","URL","createObjectURL","calculateDateFromAge","days","months","years","currentDate","calculatedDate","getFullYear","getMonth","getDate","isNaN","getTime","error","date","calculateAgeFromDate","inputDate","givenDate","handleAge","age","handleDate","closeImage","document","getElementById","state","scheduleData","DoctorSearchData","showModal","app_type_model","search","searchResult","errorData","cellData","existingPatient","selectedDateNew","toLocaleDateString","showClender","searchBYDoctorName","searchByDepartment","doctorDepartment","DoctorSearchDataForDepartment","showPrint","patientValueForPrint","printDoctorData","appointmentDay","appointmentTime","patient_regi_model_show","patientGenderDropdown","patientBloodDropdown","orgBranch","patientEventData","Subject","app_type","patient_data","add_app_outside_of_schedule","start_time","patient_email","ptn_blood_group_id","patient_birth_sex_id","patient_address1","saas_branch_id","patient_image","handleOpenModal","bind","handleCloseModal","handleChange","searchHandeler","clearHandle","addExistingPatient","PatientModelColse","handleSubmitForPatient","menuItems","text","iconCss","items","args","selectedMenuItem","item","selectedTarget","classList","contains","eventObj","scheduleObj","getEventDetails","selectedDate","goToGD","Id","patientID","goToPatientProfile","goToPatientEdit","saveEvent","CategoryColor","Description","DoctorID","EndTime","Location","StartTime","appointCreated","statusName","deleteEvent","appDate","hours","getHours","minutes","getMinutes","ampm","apptime","axios","then","res","data","catch","err","click","newEventElement","querySelector","remove","removeClass","targetElement","event","closest","isNullOrUndefined","RecurrenceRule","undefined","menuObj","hideItems","showItems","cancel","element","gender","blood_group","SaasAuthURL","ReactModal","department","user_type","user_id","doctors","result","map","patient_name","parseInt","doctors_id","patient_mobile","notes","status_color","status_name","patient_id","created_at","extend","preventDefault","replace","doctor_id","alert","swal","end_time","setMinutes","patientDetailsEisting","fullName","addEvent","patientDetails","requestType","exportItem","align","showTextOn","prefixIcon","cssClass","onExportClick","push","addedRecords","toString","IsAllDay","statusColor","saveData","message","number","process","changedRecords","updatePatientDetails","doctor_name","deletedRecords","exportToExcel","type","getElementsByClassName","placeholder","footer","ej2_instances","btnElement","createElement","innerHTML","buttonObj","Button","appendTo","appendChild","onclick","close","a","getElementsByName","userDataPatientAdd","formData","FormData","append","current","branch_id","branch_name","find","b","Number","name","patients","Swal","patentAge","ref","el","componentRef","NewModal","isOpen","onClose","onSubmit","styles","minHeight","for","color","defaultValue","border","dropdownMode","selected","onChange","dateFormat","max","i","blood_group_name","birth_sex_name","required","rows","onClick","randomChange","onKeyDown","key","textAlign","formateHN","formatPhoneNumber","marginLeft","defaultChecked","LocalizationProvider","dateAdapter","AdapterDayjs","TimeField","v","$d","label","marginRight","Autocomplete","disablePortal","options","getOptionLabel","option","newValue","sx","renderInput","params","TextField","departments_name","multiple","disableCloseOnSelect","length","renderOption","Checkbox","checked","trigger","marginTop","cursor","eventRendered","onEventRendered","t","allowResizing","timeScale","enable","interval","slotCount","currentView","minDate","eventSettings","dataSource","enableTooltip","fields","subject","title","validation","location","description","startTime","endTime","group","byGroupID","resources","actionBegin","onActionBegin","rowAutoHeight","popupOpen","onPopupOpen","field","allowMultiple","textField","idField","startHour","endHour","workDays","services","Day","Week","WorkWeek","Month","Agenda","Resize","DragAndDrop","ExcelExport","menu","beforeOpen","onContextMenuBeforeOpen","select","onMenuItemSelect"],"sourceRoot":""}